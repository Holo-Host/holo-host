on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      project:
        required: true
        type: string
      port:
        required: false
        type: number
        default: 8080
      droplets:
        required: false
        type: string
    secrets:
      DIGITAL_OCEAN_TOKEN:
        required: true
      SSH_KEY:
        required: false
      SSH_USERNAME:
        required: false
env:
  RUST_VERSION: 1.85.0

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker Build
        id: cache-docker
        uses: actions/cache@v4
        with:
          path: |
            docker-cargo
            docker-target
          key: docker-${{ inputs.project }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            docker-${{ inputs.project }}-
            docker-

      - name: Map Docker Cache
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "docker-cargo": "/root/.cargo",
              "docker-target": "/usr/src/target"
            }
          skip-extraction: ${{ steps.cache-docker.outputs.cache-hit }}

      - name: Build Docker Image
        uses: docker/build-push-action@v6
        with:
          build-args: |
            PROJECT_NAME=${{ inputs.project }}
          context: .
          load: true
          push: false
          platforms: linux/amd64
          tags: registry.digitalocean.com/holo-host/${{ inputs.project }}:${{ inputs.environment }}

      - name: Install Doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Push Docker Image to DO Container Registry
        run: docker push registry.digitalocean.com/holo-host/${{ inputs.project }}:${{ inputs.environment }}

  update-droplets:
    name: Update Droplets
    runs-on: ubuntu-latest
    needs: deploy
    if: ${{ inputs.droplets }}
    strategy:
      matrix:
        droplet: ${{ fromJson(inputs.droplets) }}
    steps:
      - name: Refresh Droplets
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ matrix.droplet }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            # stop and remove old container
            docker stop ${{ inputs.project }}
            docker rm ${{ inputs.project }}

            # pull new image and run it
            docker pull registry.digitalocean.com/holo-host/${{ inputs.project }}:${{ inputs.environment }}
            docker run -d \
              --name ${{ inputs.project }} \
              -p ${{ inputs.port }}:${{ inputs.port }}/tcp \
              -p ${{ inputs.port }}:${{ inputs.port }}/udp \
              --env-file .env \
              registry.digitalocean.com/holo-host/${{ inputs.project }}:${{ inputs.environment }}

            # clean up unused images
            docker system prune -a -f

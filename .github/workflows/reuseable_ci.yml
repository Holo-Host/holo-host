on:
  workflow_call:
    inputs:
      project:
        required: true
        type: string

env:
  RUST_VERSION: 1.85.0


jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      MONGODB_URI: "mongodb+srv://ci_test_runner:${{ secrets.CI_MONGODB_ATLAS_PASSWORD }}@cluster0.${{ secrets.DEV_MONGODB_ATLAS_CLUSTER_ID }}.mongodb.net"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ env.RUST_VERSION }}
      
      - name: Cache Rust Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-${{ inputs.project }}-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            rust-${{ inputs.project }}-
            rust-

      - name: Build Project
        run: cargo build -p ${{ inputs.project }} --verbose
      
      - name: Get CI runner IP
        id: ip
        run: echo "IP=$(curl -s ifconfig.me)" >> $GITHUB_ENV

      - name: Whitelist CI runner IP in Atlas
        run: |
          curl -s -u "${{ secrets.CI_MONGODB_ATLAS_PUBLIC_KEY }}:${{ secrets.CI_MONGODB_ATLAS_PRIVATE_KEY }}" \
            --digest \
            --header "Content-Type: application/json" \
            --request POST \
            --data "{\"ipAddress\":\"$IP\",\"comment\":\"CI temporary access\"}" \
            "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ secrets.MONGODB_ATLAS_PROJECT_ID }}/accessList"

      - name: Run Tests
        run: cargo test -p ${{ inputs.project }} --verbose

      - name: Remove CI runner IP from Atlas
        if: always()
        run: |
          curl -s -u "${{ secrets.CI_MONGODB_ATLAS_PUBLIC_KEY }}:${{ secrets.CI_MONGODB_ATLAS_PRIVATE_KEY }}" \
            --digest \
            --header "Content-Type: application/json" \
            --request DELETE \
            "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ secrets.DEV_MONGODB_ATLAS_PROJECT_ID }}/accessList/$IP"
        
      - name: Run Clippy
        run: cargo clippy -p ${{ inputs.project }} -- -D warnings
      
      - name: Run Linter
        run: cargo fmt -p ${{ inputs.project }} -- --check

name: Holo DNS

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - master
      - dev

env:
  RUST_VERSION: 1.85.0

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ env.RUST_VERSION }}
          
      - name: Cache Rust Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            rust-

      - name: Build Project
        run: cargo build --verbose

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.12.0
        with:
          mongodb-username: admin
          mongodb-password: password
          mongodb-db: holo

      - name: Set up Rust
        uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ env.RUST_VERSION }}

      - name: Cache Rust Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: rust-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            rust-

      - name: Run Tests
        run: cd rust/holo-public-api && cargo test --verbose

  deployDev:
    name: Deploy to Dev
    needs: 
      - build
      - test
    uses: ./.github/workflows/deploy_to_do_droplet.yml
    with:
      environment: dev
      project: holo-dns
      working_directory: rust/holo-dns
    secrets:
      DIGITAL_OCEAN_TOKEN: ${{ secrets.DIGITAL_OCEAN_TOKEN }}